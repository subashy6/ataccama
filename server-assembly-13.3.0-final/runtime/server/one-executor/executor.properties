# Properties file used for Ataccama Remote Executor Component in DQM (local execution). 
# Use runtime/server/executor/executor.properties file for Spark execution.


#------------------------------------- LIBRARIES ----------------------------------------------------------

# lcp - Local Classpath that will be used for local Java process. These local files are not copied to the cluster.
# You can set additional classpaths in a separate lcp.<custom> property.
# You can use the !<file_mask> notation to exclude specific files.
# For absolute paths on a Windows machine, use forward slashes '/'
#cpdelim=:
lcp.ovr=${DQC_HOME}/lib/ovr/*.jar
lcp.runtime=${DQC_HOME}/lib/*.jar

#------------------------------------- DQ RUNTIME PROPERTIES ----------------------------------------------

# Runtime properties used during DQ processings. If not set, then DQ processings use the default values below.

# Batch size for rule evaluation. Defines number of records that are sent for rule evaluation in one batch. Important for rules implemented in DQC plans.
env.DQD_RULES_BATCH_SIZE=1000

# Maximum number of currently processed records that are kept in memory. Records over this number are stored on disc.
env.DQD_IO_STORAGE_MEM_SIZE=10000

# Compression of the temporary files generated during DQ processings. Set to 'COMPRESS' to enable compression; note that this setting increases the processing time.
# Performance example: Enabling compression while processing 1 000 000 records decreases the temp files size by 60% while doubling the processing time.
env.DQD_IO_STORAGE_COMPRESS=NONE

#--------------------------------- BASIC SETTINGS ----------------------------------------------------------------

# If a license is not located in one of default locations (home folder or {runtime}/license_keys/ folder)
# it is possible to specify another folder
#dqc.licenses=${DQC_HOME}/license_keys/

# Scripts for submitting runner class in several execution modes
# If default Java is not set, specify it in the script
exec.LOCAL=exec_local.bat

# Local file system folder where possibly store outputs of remote processing to.
jobs.directOutputRoot=/tmp/output
