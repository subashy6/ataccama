<xsl:stylesheet version="1.0" 
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
	xmlns:comm="http://www.ataccama.com/purity/comment"
	xmlns:ver="http://www.ataccama.com/purity/version"
	ver:name="HTML output" 
	ver:tooltip="Converts documentation to the HTML format" 
	ver:extension="html">
	
	<xsl:output method="html" encoding="utf-8"/>
	
	<!-- root processing template -->
	
	<xsl:template match="/">
	<HTML>
		<HEAD>
			<STYLE type="text/css">
				<!-- simple table CSS definition : 1px border -->
				table.smpl {
						border-width: 0 0 1px 1px;
						border-spacing: 0;
						border-collapse: collapse;
						width: 90%;
				}

				table.outer {
						border-width: 1px 1px 1px 1px;
						border-spacing: 0;
						border-collapse: collapse;
						border-color: #0;
						border-style: solid;
				}
				
				table.smpl td
				{
					margin: 0;
					padding: 4px;
					border-width: 1px 1px 0 0;
				}
				
				table.smpl, table.smpl td
				{
					border-color: #0;
					border-style: solid;
				}
				
				pre.nonprop {
					font-family: Arial;
				}	
			
				<!-- table top headers and values -->
				.cell_hdr { background-color: #D0D0F0; font-weight: bold; font-family: Arial; font-size: 16px; }
				.cell_val { background-color: #F0F0F0; }
				.cell_extra_val { background-color: #F0F0F0;color: #A00000; }

				.cell_hdr_red { background-color: #D0E0F0; font-weight: bold; font-family: Arial; font-size: 16px; }
				
				<!-- table line headers and values -->
				.cell_line_hdr { background-color: #D0D0F0; font-weight: bold; font-family: Arial; font-size: 12px; }
				.cell_line_val {background-color: #F0F0F0; font-family: Arial; font-size: 12px; }
				
				<!-- table : comment headers and values --> 
				.cell_hdr_comment { background-color: #E0E0E0; font-weight: bold; font-family: Arial; font-size: 12px; }
				.cell_val_comment { background-color: #F0F0F0; color: #808080; font-weight: bold; font-family: Arial; font-size: 12px; }
				
				.table_90 { width: 90%; }
				
				li { font-family: arial; font-size: 13px; }
				
				H1 { font-family: Arial; font-size: 25px; }
				H2 { font-family: Arial; font-size: 20px; }
				H3 { font-family: Arial; font-size: 15px; }
			</STYLE>
			<TITLE>Documentation of configuration file : <xsl:value-of select="configDoc/@fileName"/></TITLE>
		</HEAD>
			<BODY>
				<table class="outer" width="90%">
					<tr>
						<td rowspan="3">
							<img>
								<xsl:attribute name="src"><xsl:value-of select="configDoc/@companyImage" /></xsl:attribute>
							</img>
						</td>
						<td>
							<!-- header -->
							<H1>Configuration documentation</H1>
						</td>
					</tr>
					<tr>
						<td><H2><xsl:value-of select="configDoc/@fileName" /></H2></td>
					</tr>
					<tr>
						<td>
							<!-- about -->
							<table width="100%">
								<tr>
									<td class="cell_hdr">Generated by</td>
									<td class="cell_val"><xsl:value-of select="configDoc/generatorMeta/@name"/></td>
									<td class="cell_hdr">Generation date</td>
									<td class="cell_val"><xsl:value-of select="configDoc/generatorMeta/@date"/></td>
								</tr>
							</table>
						</td>
					</tr>
				</table>
				
				<!-- contents -->
				<br/>
				<div id="l_contents"><H1>Contents</H1></div>
				<ul>
					<li><a href="#l_summary">Summary</a></li>
					<li><a href="#l_screen">Configuration diagram</a></li>
					<li><a href="#l_refs">References</a></li>
					<li><a href="#l_algs">Algorithms</a></li>
				</ul>
				
				
				<!-- summary -->
				<br/>
				<table width="90%">
					<tr>
						<td><div id="l_summary"><H2>Configuration summary</H2></div></td>
						<td width="80"><a href="#l_contents">contents</a></td>
					</tr>
				</table>
				<table class="table_90">
					<tr>
						<td class="cell_hdr">File name</td>
						<td class="cell_val"><xsl:value-of select="configDoc/@fileName"/></td>
					</tr>
					<tr>
						<td class="cell_hdr">Full path</td>
						<td class="cell_val"><xsl:value-of select="configDoc/@cfgFilePath"/></td>
					</tr>
					<tr>
						<td class="cell_hdr">Last modified</td>
						<td class="cell_val"><xsl:value-of select="configDoc/@date"/></td>
					</tr>
					<tr>
						<td class="cell_hdr">Runtime (core) version</td>
						<td class="cell_val"><xsl:value-of select="configDoc/@runtimeVersion"/></td>
					</tr>
					<xsl:variable name="description" select="configDoc/@description"/>
					<xsl:choose>
						<xsl:when test="boolean( $description )">
							<tr>
								<td class="cell_hdr">Description</td>
								<td class="cell_val"><pre class="nonprop"><xsl:value-of select="$description"/></pre></td>
							</tr>
						</xsl:when>
					</xsl:choose>
				</table>
		
		
			<!-- diagram and list of algorithms -->
			<br/>
			<table width="90%" id="l_screen">
				<tr>
					<td><H2>Configuration diagram</H2></td>
					<td width="80"><a href="#l_contents">contents</a></td>
				</tr>
			</table>
			
			<table class="smpl">
				<tr>
					<ul>
						<td style="vertical-align: top">
							<b>Algorithm links</b>
							<xsl:for-each select="configDoc/configAlg">
								<li><a>
									 	<xsl:attribute name="href">#alg_<xsl:value-of select="@name"/></xsl:attribute>
									 	<xsl:value-of select="@name"/>
									 </a>
								</li>
							</xsl:for-each>
						</td>
					</ul>
					<td>
						<img>
							<xsl:attribute name="src"><xsl:value-of select='configDoc/@screen'/></xsl:attribute>
							<xsl:attribute name="name">Configuration diagram</xsl:attribute>
						</img>						
					</td>
				</tr>
			</table>
			
			<!-- references -->
			<br/>
			<table width="90%" id="l_refs">
				<tr>
					<td><div><H2>Configuration references</H2></div></td>
					<td width="80"><a href="#l_contents">contents</a></td>
				</tr>
			</table>			
			
			<xsl:variable name="referrer" select="/configDoc/referedBy"/>
			<xsl:choose>
				<xsl:when test="boolean ($referrer)">
					This configuration is referenced from:
					<!-- may be referenced from multiple places - this is true for components -->
					<ul>
					<xsl:for-each select="$referrer">
							<li>
								<a><xsl:attribute name="href"><xsl:value-of select="@name"/>.html</xsl:attribute><xsl:value-of select="@name"/></a>
							</li>
					</xsl:for-each>					
					</ul>
				</xsl:when>
			</xsl:choose>
			
			<xsl:variable name="links" select="/configDoc/reference"/>
			<xsl:choose>
				<xsl:when test="boolean ($links)">
					Configuration references following configurations:<br/>
					<ul>
					<xsl:for-each select="$links">
							<li>
								<a>
									<xsl:attribute name="href"><xsl:value-of select="@name"/>.html</xsl:attribute>
									<xsl:value-of select="@name"/>
								</a>
							</li>
					</xsl:for-each>
					</ul>
				</xsl:when>
				<xsl:otherwise>
					Algorithm does not reference any other parts.
				</xsl:otherwise>
			</xsl:choose>
			
			
			<!-- algorithms -->
			<br/><br/>
			<table width="90%" id="l_algs">
				<tr>
					<td><H2>Algorithm descriptions</H2></td>
					<td width="80"><a href="#l_contents">contents</a></td>
				</tr>
			</table>
			 
			<xsl:for-each select="configDoc/configAlg">
			
				<!-- algorithm summary: image (if exists) and name -->
				<div>
					<xsl:attribute name="id">alg_<xsl:value-of select="@name"/></xsl:attribute>
				</div>
				<table class="smpl">
					<xsl:variable name="imgPath" select="@image"/>
					<tr>
						<xsl:choose>
							<xsl:when test="boolean( $imgPath )">
								<td rowspan="2" width="64">
									<img>
										<xsl:attribute name="src"><xsl:value-of select="$imgPath"/></xsl:attribute>
									</img>
								</td>
							</xsl:when>
						</xsl:choose>
						<td class="cell_hdr_red">Algorithm</td>
						<td class="cell_val"><xsl:value-of select="@name"/></td>
						<td width="80" rowspan="2">
							<a href="#l_contents">contents</a><br/>
							<a href="#l_screen">alg. list</a>
							<xsl:variable name="def_place" select="@definitionFile"/>
							<xsl:choose>
								<!-- direct link to definition file for components -->
								<xsl:when test="boolean( $def_place )">
									<br/><a href="{$def_place}.html">definition</a>
								</xsl:when>
							</xsl:choose>
						</td>
					</tr>
					<tr>
						<td class="cell_hdr_red">Class</td>
						<td class="cell_val"><xsl:value-of select="@class"/></td>
					</tr>
					
					<xsl:variable name="stepDisabled" select="@disabled"/>
					<xsl:variable name="stepBypassed" select="@bypassed"/>
					
					<xsl:choose>
						<xsl:when test="boolean( $stepDisabled )">
							<xsl:choose>
								<xsl:when test="boolean( $imgPath )">
									<tr><td class="cell_extra_val" colspan="4">Algorithm is disabled</td></tr>
								</xsl:when>
								<xsl:otherwise>
									<tr><td class="cell_extra_val" colspan="3">Algorithm is disabled</td></tr>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
					
					<xsl:choose>
						<xsl:when test="boolean( $stepBypassed )">
							<xsl:choose>
								<xsl:when test="boolean( $imgPath )">
									<tr><td class="cell_extra_val" colspan="4">Algorithm is bypassed</td></tr>
								</xsl:when>
								<xsl:otherwise>
									<tr><td class="cell_extra_val" colspan="3">Algorithm is bypassed</td></tr>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
					
				</table>
				
				<!-- process inside -->					
				<xsl:apply-templates select="."/>
					
				<br/><br/>
			</xsl:for-each>

			</BODY>
		</HTML>
	</xsl:template>

	<!-- Processes internals of selected property (in current context) -->

	<xsl:template name="processProperty">
				<xsl:choose>
					<xsl:when test="contains(name(),'comment')">
						<!-- skip: comment already pre-processed from parent -->
					</xsl:when>							
					<xsl:otherwise>
					
						<!-- skip white chars -->
						<xsl:choose>
							<xsl:when test="string-length(local-name()) > 0">
								<!-- process only named elements -->
								<tr>
								<!-- FIXME : release empty elements from processing? -->
									<td class="cell_line_hdr" width="150"><xsl:value-of select="local-name()"/></td>
									<td class="cell_line_val">
										<xsl:variable name="hasText" select="text()"/>
										<xsl:variable name="hasElems" select="node()"/>
										<xsl:variable name="hasAttribs" select="@*"/>				
										<xsl:choose>
										
											<xsl:when test="(boolean( $hasElems ) and  count($hasElems) > count($hasText)) or boolean($hasAttribs)">
												<!-- more nodes than textual nodes : get nodes and attribs and process them -->												
												<table>
													<!-- find and process possible comment -->
													<xsl:call-template name="processComment"/>
													<xsl:for-each select="node()|@*">
														<xsl:call-template name="processProperty"/>
													</xsl:for-each>
												</table>
																							
											</xsl:when>
											<xsl:otherwise>	

												<xsl:choose>
													<xsl:when test="local-name()='expression'">
														<pre><xsl:value-of select="."/></pre><BR/>
													</xsl:when>
													<xsl:otherwise>
														<xsl:value-of select="."/><BR/>
													</xsl:otherwise>
												 </xsl:choose>
												
											</xsl:otherwise>
											
										</xsl:choose>
									</td>
								</tr>
							</xsl:when>
							
						</xsl:choose>
						
				</xsl:otherwise>
					
			</xsl:choose>
	</xsl:template>


	<!-- looks for the comm:comment node in the current node - if found creates 'comment' tr table 
		 line with it's value -->
		 
	<xsl:template name="processComment">
		<xsl:variable name="cmt" select="comm:comment"/>
		<xsl:choose>
			<xsl:when test="boolean($cmt)">
				<tr>
					<td class="cell_hdr_comment"></td>
					<td class="cell_val_comment"><pre><xsl:value-of select="$cmt"/></pre></td>
				</tr>
			</xsl:when>
		</xsl:choose>
	</xsl:template>


	<!-- processes properties : detail description - catches 'properties' tag -->
		
	<xsl:template match="properties">
		<table width="90%">
			<tr>
				<td class="cell_hdr">Property</td>
				<td class="cell_hdr">Description</td>
			</tr>
			
			<xsl:call-template name="processComment"/>
			<xsl:for-each select="node()|@*">
				<xsl:call-template name="processProperty"/>
			</xsl:for-each>
		</table>
	</xsl:template>
	
	
	<!-- processes overview : direct copy of included text -->
	
	<xsl:template match="overview">
		<H4>Overview</H4>
		<pre><xsl:value-of select="."/></pre>
	</xsl:template>
	
</xsl:stylesheet>